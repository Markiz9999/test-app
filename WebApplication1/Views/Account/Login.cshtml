@using WebApplication1.Models
@using WebApplication1.Helpers;

@model LoginViewModel
@{
    ViewBag.Title = "Management system";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Management system</title>
    @Styles.Render("~/Content/Account/css")
</head>
<body>
    <div class="container">
        <section id="loginForm">
            <h3 class="title">@ViewBag.Title</h3>
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
            {
                <div class="form-group">
                    @Html.LabelFor(m => m.Login, new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.Login, new
                    {
                        @class = "form-control",
                        @required = true,
                        @minlength = MyValidationHelper.LoginMin,
                        @maxlength = MyValidationHelper.LoginMax,
                        @pattern = MyValidationHelper.LoginPattern,
                    })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                    @Html.PasswordFor(m => m.Password, new 
                    {
                        @class = "form-control",
                        @required = true,
                        @minlength = MyValidationHelper.PasswordMin,
                        @maxlength = MyValidationHelper.PasswordMax,
                    })
                </div>
                <div class="form-group">
                    <input type="submit" value="Log in" class="button" />
                </div>
            }
            @{
                var errors = Html.ViewData.ModelState.Values.SelectMany(model => model.Errors);
                if (errors.Count() > 0)
                {
                    <div class="errors">
                        @foreach (ModelError error in errors)
                        {
                            <div class="text-danger">@error.ErrorMessage</div>
                        }
                    </div>
                }
            }
        </section>
    </div>
    @Scripts.Render("~/bundles/jquery")
</body>
</html>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
